plugins {
    alias(libs.plugins.paperweight.userdev) apply false
    alias(libs.plugins.lombok) apply false
    alias(libs.plugins.papermake) apply false
}

group = 'io.github.singlerr'
version = plugin_version

allprojects {
    apply plugin: 'java'
    apply plugin: libs.plugins.paperweight.userdev.get().pluginId
    apply plugin: libs.plugins.lombok.get().pluginId
    apply plugin: libs.plugins.papermake.get().pluginId

    base {
        archivesName = plugin_name
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        paperweight.paperDevBundle(paper_version)
        testImplementation platform('org.junit:junit-bom:5.10.0')
        testImplementation 'org.junit.jupiter:junit-jupiter'
    }

    test {
        useJUnitPlatform()
    }
    def targetJavaVersion = 17
    java {
        def javaVersion = JavaVersion.toVersion(targetJavaVersion)
        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        if (JavaVersion.current() < javaVersion) {
            toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'

        if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
            options.release.set(targetJavaVersion)
        }
    }

    processResources {
        def props = [version: version, author: plugin_author, name: plugin_name]
        inputs.properties props
        filteringCharset 'UTF-8'
        filesMatching('plugin.yml') {
            expand props
        }
    }

    assemble {
        dependsOn reobfJar
    }
}
